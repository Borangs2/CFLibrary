@model IEnumerable<CFLibrary.Models.Book>
@using Microsoft.AspNetCore.Http;

@{
    ViewData["Title"] = "Index";
}
<div class="d-flex justify-content-between">
    <h1 class="w-auto float-left">Index</h1>

    <form asp-action="Search" asp-controller="Books">
        <input class="rounded" type="search" name="searchTerm" placeholder="Search..." />
    </form>

    <div class="d-flex">
        <form asp-action="SortCategory" asp-controller="Books">
            <label>Category: </label>
            <select name="sortTerm" onchange="this.form.submit()" class="h-50">
                <option value="">None</option>
                <option value="Fantasi">Fantasi</option>
                <option value="Action">Action</option>
                <option value="Romans">Romans</option>
                <option value="Fakta">Fakta</option>
                <option value="Drama">Drama</option>
                <option value="Sport">Sport</option>
            </select>
        </form>

        <a class="btn btn-outline-info h-50 p-0 pl-1 pr-1" asp-action="Index">Reset</a>
    </div>
    <div class="d-flex">
        <form asp-action="SortAuthor" asp-controller="Books">
            <label>Authors: </label>
            <select name="sortTerm" onchange="this.form.submit()" class="h-50">
                <option value="">None</option>
                <option value="1">Anders Sten</option>
                <option value="2">Kalle Knut</option>
                <option value="3">Lisa Andersson</option>
                <option value="4">Peter Snäll</option>
                <option value="5">Emma Larsson</option>
            </select>
        </form>

        <a class="btn btn-outline-info h-50 p-0 pl-1 pr-1" asp-action="Index">Reset</a>
    </div>


    @if (Context.Session.GetInt32("UserId") != null)
    {
        <div class="w-auto">
            Welcome @Context.Session.GetString("Username")
        </div>
    }


    <p>
        @if (Context.Session.GetInt32("UserId") != null)
        {
            <a asp-action="Create" class="float-right">Create New</a>

        }
    </p>
</div>

@if (TempData["Borrow"] != null)
{
    switch (TempData["Borrow"])
    {
        case "Success":
            <div class="alert-success">
                <h5 class="text-center p-2">Book Borrowed</h5>
            </div>
            break;

        case "LoginError":
            <div class="alert-danger">
                <h5 class="text-center p-2">Login to borrow books</h5>
            </div>
            break;

        case "DuplicateBorrowError":
            <div class="alert-danger">
                <h5 class="text-center p-2">You have already borrowed this book</h5>
            </div>
            break;

    }
}




<div class="container d-flex flex-wrap">
    @foreach (var book in Model)
    {
        <div class="card w-25 m-1">
            <div class="card-header">
                <div class="text-center">
                    <h3>
                        @Html.DisplayFor(modelItem => book.Title)
                    </h3>

                </div>
                <div class="text-center">
                    By: @Html.DisplayFor(modelItem => book.Author.FirstName) @Html.DisplayFor(modelItem => book.Author.LastName)
                </div>

            </div>
            <div class="card-body">
                <div class="card-img">
                    <img class="w-100" src="@Html.DisplayFor(modelItem => book.ImgUrl)" />
                </div>
            </div>
            <div class="card-footer">
                <a class="btn btn-outline-success" asp-action="Details" asp-route-id="@book.BookId">View</a>
            </div>



        </div>
    }






</div>
